stages:
  unconditional:
    matrix:
      distribution: ${unconditional_distributions}
      dataset: ${datasets}
    cmd: python scripts/train.py --log-level ${log-level} --log-file results/unconditional_${item.distribution}_${item.dataset}/train.log --experiment-name unconditional-${item.dataset} unconditional@${item.distribution}-${item.dataset} ${item.distribution} ${item.dataset} results/unconditional_${item.distribution}_${item.dataset} --test-mode=${testmode}
    params:
    - log-level
    - seed
    - textwidth
    - datasets.${item.dataset}*
    - unconditional_distributions.${item.distribution}.${item.dataset}*
    deps:
    - scripts/train.py
    - pyproject.toml
    - src/mctm
    metrics:
    - results/unconditional_${item.distribution}_${item.dataset}/metrics.yaml
    outs:
    - results/unconditional_${item.distribution}_${item.dataset}/mcp
    - results/unconditional_${item.distribution}_${item.dataset}/train.log
    - results/unconditional_${item.distribution}_${item.dataset}/dataset.pdf
    - results/unconditional_${item.distribution}_${item.dataset}/samples.pdf

  unconditional_benchmark:
    matrix:
      distribution: ${unconditional_benchmark_distributions}
      dataset: ${benchmark_datasets}
    cmd: python scripts/train_benchmark.py --log-level ${log-level} --log-file results/unconditional_benchmark_${item.distribution}_${item.dataset}/train.log --experiment-name unconditional-benchmark-${item.dataset} unconditional_benchmark@${item.distribution}-${item.dataset} ${item.distribution} ${item.dataset} results/unconditional_benchmark_${item.distribution}_${item.dataset} --test-mode=${testmode}
    params:
    - log-level
    - seed
    - benchmark_datasets.${item.dataset}*
    - unconditional_benchmark_distributions.${item.distribution}.${item.dataset}*
    deps:
    - datasets/${item.dataset}
    - scripts/train.py
    - pyproject.toml
    - src/mctm
    metrics:
    - results/unconditional_benchmark_${item.distribution}_${item.dataset}/metrics.yaml
    outs:
    - results/unconditional_benchmark_${item.distribution}_${item.dataset}/mcp
    - results/unconditional_benchmark_${item.distribution}_${item.dataset}/train.log

  conditional:
    matrix:
      distribution: ${conditional_distributions}
      dataset: ${datasets}
    cmd: python scripts/train.py --log-level ${log-level} --log-file results/conditional_${item.distribution}_${item.dataset}/train.log --experiment-name conditional-${item.dataset} conditional@${item.distribution}-${item.dataset} ${item.distribution} ${item.dataset} results/conditional_${item.distribution}_${item.dataset} --test-mode=${testmode}
    params:
    - log-level
    - seed
    - textwidth
    - datasets.${item.dataset}*
    - conditional_distributions.${item.distribution}*
    deps:
    - scripts/train.py
    - pyproject.toml
    - src/mctm
    metrics:
    - results/conditional_${item.distribution}_${item.dataset}/metrics.yaml
    outs:
    - results/conditional_${item.distribution}_${item.dataset}/mcp
    - results/conditional_${item.distribution}_${item.dataset}/train.log
    - results/conditional_${item.distribution}_${item.dataset}/dataset.pdf
    - results/conditional_${item.distribution}_${item.dataset}/samples.pdf

  unconditional_hybrid:
    matrix:
      distribution: ${unconditional_hybrid_distributions}
      dataset: ${datasets}
    cmd: python scripts/train.py --log-level ${log-level} --log-file results/unconditional_hybrid_${item.distribution}_${item.dataset}/train.log --experiment-name unconditional-hybrid-${item.dataset} unconditional_hybrid@${item.distribution}-${item.dataset} ${item.distribution} ${item.dataset} results/unconditional_hybrid_${item.distribution}_${item.dataset}/  --test-mode=${testmode}
    params:
    - log-level
    - seed
    - textwidth
    - datasets.${item.dataset}*
    - unconditional_hybrid_distributions.${item.distribution}.${item.dataset}*
    deps:
    - scripts/train.py
    - pyproject.toml
    - src/mctm
    metrics:
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/metrics.yaml
    outs:
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/train.log
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/mcp
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/dataset.pdf
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/data.pdf
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/z1.pdf
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/z2.pdf
    - results/unconditional_hybrid_${item.distribution}_${item.dataset}/samples.pdf

  unconditional_hybrid_pre_trained:
    matrix:
      distribution: ${unconditional_hybrid_pre_trained_distributions}
      dataset: ${datasets}
    cmd: python scripts/train.py --log-level ${log-level} --log-file results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/train.log --experiment-name unconditional-hybrid-pre-trained-${item.dataset} unconditional_hybrid_pre_trained@${item.distribution}-${item.dataset} ${item.distribution} ${item.dataset} results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/  --test-mode=${testmode}
    params:
    - log-level
    - seed
    - textwidth
    - datasets.${item.dataset}*
    - unconditional_hybrid_pre_trained_distributions.${item.distribution}.${item.dataset}*
    deps:
    - scripts/train.py
    - pyproject.toml
    - src/mctm
    - results/unconditional_elementwise_flow_${item.dataset}/mcp
    metrics:
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/metrics.yaml
    outs:
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/train.log
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/mcp
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/dataset.pdf
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/data.pdf
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/z1.pdf
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/z2.pdf
    - results/unconditional_hybrid_pre_trained_${item.distribution}_${item.dataset}/samples.pdf

  unconditional_benchmark_hybrid_pre_trained:
    matrix:
      distribution: ${unconditional_benchmark_hybrid_pre_trained_distributions}
      dataset: ${benchmark_datasets}
    cmd: python scripts/train_benchmark.py --log-level ${log-level} --log-file results/unconditional_benchmark_${item.distribution}_${item.dataset}/train.log --experiment-name unconditional-benchmark-${item.dataset} unconditional_benchmark@${item.distribution}-${item.dataset} ${item.distribution} ${item.dataset} results/unconditional_benchmark_${item.distribution}_${item.dataset} --test-mode=${testmode}
    params:
    - log-level
    - seed
    - benchmark_datasets.${item.dataset}*
    - unconditional_benchmark_hybrid_pre_trained_distributions.${item.distribution}.${item.dataset}*
    deps:
    - datasets/${item.dataset}
    - scripts/train.py
    - pyproject.toml
    - src/mctm
    - results/unconditional_benchmark_elementwise_flow_${item.dataset}/mcp
    metrics:
    - results/unconditional_benchmark_${item.distribution}_${item.dataset}/metrics.yaml
    outs:
    - results/unconditional_benchmark_${item.distribution}_${item.dataset}/mcp
    - results/unconditional_benchmark_${item.distribution}_${item.dataset}/train.log

  malnutrition:
    foreach: ${malnutrition_distributions}
    do:
      cmd: python scripts/train_malnutrition.py --log-level ${log-level} --log-file results/conditional_${key}_malnutrition/train.log --experiment-name conditional-malnutrition malnutrition@${key} ${key} malnutrition results/conditional_${key}_malnutrition --test-mode=${testmode}
      params:
      - log-level
      - seed
      - textwidth
      - malnutrition_kwds
      - malnutrition_distributions.${key}*
      deps:
      - datasets/malnutrition
      - scripts/train_malnutrition.py
      - pyproject.toml
      - src/mctm
      metrics:
      - results/conditional_${key}_malnutrition/metrics.yaml
      outs:
      - results/conditional_${key}_malnutrition/mcp
      - results/conditional_${key}_malnutrition/train.log
      - results/conditional_${key}_malnutrition/dataset.pdf
      - results/conditional_${key}_malnutrition/samples.pdf
