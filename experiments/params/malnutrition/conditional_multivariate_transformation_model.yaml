compile_kwargs: {}
  # jit_compile: true
two_stage_training: true
fit_kwargs:
- epochs: 1000
  batch_size: 1024
  learning_rate: 0.05
  reduce_lr_on_plateau: false
  early_stopping: 50
  monitor: val_loss
  verbose: true
- epochs: 400
  batch_size: 512
  learning_rate:
    scheduler_kwargs:
      decay_steps: epochs
      initial_learning_rate: 0.001
    scheduler_name: cosine_decay
  reduce_lr_on_plateau: false
  early_stopping: 50
  monitor: val_loss
  verbose: true
model_kwargs:
  marginal_bijectors:
  - bijector: BernsteinPolynomial
    invert: true
    bijector_kwargs:
      domain: [-5, 5]
      extrapolation: true
    parameters_constraint_fn: hybrid_flows.activations.get_thetas_constrain_fn
    parameters_constraint_fn_kwargs:
      allow_flexible_bounds: false
      bounds: linear
      high: 5
      low: -5
    parameters_fn: parameter_vector
    parameters_fn_kwargs:
      dtype: float32
      parameter_shape: [&dims 3, 6]
  - bijector: Shift
    invert: true
    parameters_fn: bernstein_polynomial
    parameters_fn_kwargs:
      conditional_event_shape: 1
      domain: &x_domain [0, 35]
      dtype: float32
      extrapolation: true
      parameter_shape: [*dims]
      polynomial_order: 6
  joint_bijectors:
  - bijector: ScaleMatvecLinearOperator
    invert: true
    parameters_fn: bernstein_polynomial
    parameters_fn_kwargs:
      conditional_event_shape: 1
      domain: *x_domain
      dtype: float32
      extrapolation: true
      parameter_shape: [3]
      polynomial_order: 6
    parameters_constraint_fn: hybrid_flows.activations.lambda_parameters_constraint_fn
