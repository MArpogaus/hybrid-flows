log-level: info
seed: 1
textwidth: 487.8225
testmode: true

datasets:
  moons:
    n_samples: 16384
    noise: 0.05
    scale: [0.05, 0.95]
  circles:
    n_samples: 16384
    noise: 0.05
    factor: 0.5
    scale: [0.05, 0.95]

benchmark_datasets:
  # bsds300:
  #   scale: 0.537
  #   shift: 0.914
  # gas:
  #   scale: 0.007
  #   shift: 5.191
  # hepmass:
  #   scale: 0.054
  #   shift: 8.063
  # miniboone:
  #   scale: 0.018
  #   shift: 23.507
  power:
    scale: 0.05
    shift: 5.456

malnutrition_kwargs:
  data_path: datasets/malnutrition/india.raw
  targets: [stunting, wasting, underweight]
  covariates: [mage]

common:
  fit_kwargs: &fit_kwargs
    epochs: 10000
    batch_size: 256
    early_stopping: 4
    learning_rate: 0.01
    lr_patience: 25
    lr_reduction_factor: 0.5
    monitor: val_loss
    reduce_lr_on_plateau: true
    verbose: true
  distribution_kwargs: &distribution_kwargs
    bijector_name: bernstein_poly
    low: -3
    high: 3
    bounds: smooth
    allow_flexible_bounds: true
    shift: false
    scale: false
    # bijector_name: quadratic_spline
    # nbins: 32
    # interval_width: 1
    # range_min: 0
    # min_bin_width: 1e-3
    # min_slope: 1e-3
  benchmark_fit_kwargs: &benchmark_fit_kwargs
    epochs: 200
    batch_size: 128
    learning_rate:
      scheduler_name: polynomial_warmup_and_cosine_decay
      scheduler_kwargs:
        decay_steps: 200
        initial_learning_rate: 0.0005
        max_learning_rate: 0.01
        end_learning_rate: 0.0001
        warmup: 5
        warmup_power: 1
        stationary: 20
    lr_patience:
    reduce_lr_on_plateau: false
    early_stopping: 100
    monitor: val_loss
    verbose: true
  benchmark_distribution_kwargs: &benchmark_distribution_kwargs
    # bijector_name: bernstein_poly
    # low: -2
    # high: 2
    # bounds: linear
    # allow_flexible_bounds: true
    # order: 128
    allow_flexible_bounds: true
    bijector_name: bernstein_poly
    bounds: linear
    high: 1
    low: 0
    num_layers: 3
    order: 30

unconditional_distributions:
  elementwise_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: &elementwise_flow_moons_order 50
      parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: &elementwise_flow_circles_order 80
      parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  multivariate_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  multivariate_normal:
    moons:
      distribution_kwargs: {}
      parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs: {}
      parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  coupling_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 1
        order: 50
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        - 16
        activation: tanh
        batch_norm: false
        dropout: 0
      fit_kwargs:
        epochs: 110
        batch_size: 256
        learning_rate:
          scheduler_name: polynomial_decay
          scheduler_kwargs:
            initial_learning_rate: 0.01
            end_learning_rate: 0.00001
            power: 1
            decay_steps: 100
        validation_split: 0.1
        lr_patience: 1
        reduce_lr_on_plateau: false
        early_stopping: 50
        monitor: val_loss
        verbose: true
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 1
        order: 50
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        activation: relu
        batch_norm: false
        dropout: 0
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  masked_autoregressive_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        low: 0
        high: 1
        order: 10
        num_layers: 4
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        - 16
        activation: relu
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        activation: relu
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

unconditional_benchmark_distributions:
  # elementwise_flow:
  #   power:
  #     distribution_kwargs:
  #       <<: *benchmark_distribution_kwargs
  #       order: 100
  #     parameter_kwargs:
  #       conditional: false
  #       dtype: float32
  #     fit_kwargs:
  #       <<: *benchmark_fit_kwargs
  #   hepmass:
  #     distribution_kwargs:
  #       <<: *benchmark_distribution_kwargs
  #       order: 100
  #     parameter_kwargs:
  #       conditional: false
  #       dtype: float32
  #     fit_kwargs:
  #       <<: *benchmark_fit_kwargs
  #   gas:
  #     distribution_kwargs:
  #       <<: *benchmark_distribution_kwargs
  #       order: 100
  #     parameter_kwargs:
  #       conditional: false
  #       dtype: float32
  #     fit_kwargs:
  #       <<: *benchmark_fit_kwargs
  #   miniboone:
  #     distribution_kwargs:
  #       <<: *benchmark_distribution_kwargs
  #       order: 100
  #     parameter_kwargs:
  #       conditional: false
  #       dtype: float32
  #     fit_kwargs:
  #       <<: *benchmark_fit_kwargs
  #   bsds300:
  #     distribution_kwargs:
  #       <<: *benchmark_distribution_kwargs
  #       order: 100
  #     parameter_kwargs:
  #       conditional: false
  #       dtype: float32
  #     fit_kwargs:
  #       <<: *benchmark_fit_kwargs

  masked_autoregressive_flow:
    power:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
      parameter_kwargs:
        hidden_units:
        - 16
        - 32
        - 64
        activation: relu
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    gas:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      parameter_kwargs:
        hidden_units:
        - 64
        - 64
        activation: tanh
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    hepmass:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      parameter_kwargs:
        hidden_units:
        - 64
        - 64
        activation: tanh
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    miniboone:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      parameter_kwargs:
        hidden_units:
        - 64
        - 64
        activation: tanh
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    bsds300:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      parameter_kwargs:
        hidden_units:
        - 64
        - 64
        activation: tanh
      fit_kwargs:
        <<: *benchmark_fit_kwargs

unconditional_benchmark_hybrid_pre_trained_distributions:
  masked_autoregressive_flow_first_dim_masked:
    power:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 30
        low: 0
        high: 1
        num_layers: 1
      freeze_base_model: true
      base_checkpoint_path: unconditional_benchmark_elementwise_flow_power/mcp/weights
      parameter_kwargs:
        made_kwargs:
          hidden_units:
          - 512
          - 512
          - 512
          activation: relu
        x0_kwargs:
          hidden_units:
          - 64
          - 64
          - 64
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: 100
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    gas:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
        low: 0
        high: 1
      freeze_base_model: true
      base_checkpoint_path: unconditional_benchmark_elementwise_flow_gas/mcp/weights
      parameter_kwargs:
        made_kwargs:
          hidden_units:
          - 512
          - 512
          - 512
          activation: relu
        x0_kwargs:
          hidden_units:
          - 64
          - 64
          - 64
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: 100
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    hepmass:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 80
        low: 0
        high: 1
      freeze_base_model: true
      base_checkpoint_path: unconditional_benchmark_elementwise_flow_hepmass/mcp/weights
      parameter_kwargs:
        made_kwargs:
          hidden_units:
          - 512
          - 512
          - 512
          activation: relu
        x0_kwargs:
          hidden_units:
          - 64
          - 64
          - 64
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    bsds300:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 80
        low: 0
        high: 1
      freeze_base_model: true
      base_checkpoint_path: unconditional_benchmark_elementwise_flow_bsds300/mcp/weights
      parameter_kwargs:
        made_kwargs:
          hidden_units:
          - 512
          - 512
          - 512
          activation: relu
        x0_kwargs:
          hidden_units:
          - 64
          - 64
          - 64
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *benchmark_fit_kwargs
    miniboone:
      distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 80
        low: 0
        high: 1
      freeze_base_model: true
      base_checkpoint_path: unconditional_benchmark_elementwise_flow_miniboone/mcp/weights
      parameter_kwargs:
        made_kwargs:
          hidden_units:
          - 512
          - 512
          - 512
          activation: relu
        x0_kwargs:
          hidden_units:
          - 64
          - 64
          - 64
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *benchmark_distribution_kwargs
        order: 100
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *benchmark_fit_kwargs

conditional_distributions:
  elementwise_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        conditional: true
        activation: relu
        batch_norm: true
        dropout: 0
        hidden_units:
        - 16
        - 16
        input_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        conditional: true
        activation: relu
        batch_norm: true
        dropout: 0
        hidden_units:
        - 16
        - 16
        input_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  multivariate_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        conditional: true
        activation: relu
        batch_norm: true
        dropout: 0
        hidden_units:
        - 16
        - 16
        input_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        conditional: true
        activation: relu
        batch_norm: true
        dropout: 0
        hidden_units:
        - 16
        - 16
        input_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  multivariate_normal:
    moons:
      distribution_kwargs: {}
      parameter_kwargs:
        conditional: true
        activation: relu
        batch_norm: true
        dropout: 0
        hidden_units:
        - 16
        - 16
        input_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs: {}
      parameter_kwargs:
        conditional: true
        activation: relu
        batch_norm: true
        dropout: 0
        hidden_units:
        - 16
        - 16
        input_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  masked_autoregressive_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        - 16
        activation: relu
        conditional: True,
        # conditional_input_layers='first_layer',
        conditional_event_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 50
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        - 16
        activation: relu
        conditional: True,
        # conditional_input_layers='first_layer',
        conditional_event_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  coupling_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 2
        order: 80
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        - 16
        activation: relu
        batch_norm: false,
        dropout: 0
        conditional: True,
        conditional_event_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 2
        order: 50
      parameter_kwargs:
        hidden_units:
        - 16
        - 16
        activation: relu
        batch_norm: false,
        dropout: 0
        conditional: True,
        conditional_event_shape: 1
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

unconditional_hybrid_distributions:
  masked_autoregressive_flow_first_dim_masked:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 25
        low: 0
        high: 1
      freeze_base_model: false
      base_checkpoint_path: false
      parameter_kwargs:
        made_kwargs:
          hidden_units: []
          activation: relu
        x0_kwargs:
          hidden_units:
          - 32
          - 32
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: *elementwise_flow_moons_order
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 100
        low: 0
        high: 1
      freeze_base_model: false
      base_checkpoint_path: false
      parameter_kwargs:
        made_kwargs:
          hidden_units: []
          activation: relu
        x0_kwargs:
          hidden_units:
          - 16
          - 16
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: *elementwise_flow_circles_order
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  coupling_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 1
        order: 25
        low: 0
        high: 1
      freeze_base_model: false
      base_checkpoint_path: false
      parameter_kwargs:
        hidden_units:
        - 1024
        - 1024
        - 1024
        activation: relu
        batch_norm: false
        dropout: 0
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: 25
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 1
        order: 80
        low: 0
        high: 1
      freeze_base_model: false
      base_checkpoint_path: false
      parameter_kwargs:
        hidden_units:
        - 512
        - 512
        activation: relu
        batch_norm: false
        dropout: 0
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: 25
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

unconditional_hybrid_pre_trained_distributions:
  masked_autoregressive_flow_first_dim_masked:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 25
        low: 0
        high: 1
        bounds: identity
        num_layers: 3
      freeze_base_model: true
      base_checkpoint_path: unconditional_elementwise_flow_moons/mcp/weights
      parameter_kwargs:
        # made_kwargs:
        #   hidden_units: []
        #   activation: relu
        # x0_kwargs:
        #   hidden_units:
        #   - 32
        #   - 32
        #   activation: relu
        #   batch_norm: false
        #   dropout: 0
        hidden_units:
        - 32
        - 32
        activation: relu
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: *elementwise_flow_moons_order
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        order: 100
        low: 0
        high: 1
      freeze_base_model: false
      base_checkpoint_path: false
      parameter_kwargs:
        made_kwargs:
          hidden_units: []
          activation: relu
        x0_kwargs:
          hidden_units:
          - 16
          - 16
          activation: relu
          batch_norm: false
          dropout: 0
          kernel_initializer: glorot_uniform
          bias_initializer: zeros
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: *elementwise_flow_circles_order
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

  # masked_autoregressive_flow:
  #   distribution_kwargs: *distribution_kwargs
  #   freeze_base_model: true
  #   base_checkpoint_path: unconditional_flow
  #   parameter_kwargs:
  #     hidden_units:
  #     - 16
  #     - 16
  #     activation: relu
  #   base_distribution: elementwise_flow
  #   base_distribution_kwargs: *distribution_kwargs
  #   base_parameter_kwargs:
  #     conditional: false
  #     dtype: float32
  #   fit_kwargs:
  #     epochs: 10000
  #     validation_split: 0.1
  #     batch_size: 512
  #     learning_rate: 0.01
  #     lr_patience: 500
  #     reduce_lr_on_plateau: true
  #     early_stopping: true
  #     verbose: true
  #     monitor: val_loss

  coupling_flow:
    moons:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 3
        order: 10
        low: 0
        high: 1
        bounds: smooth
      freeze_base_model: true
      base_checkpoint_path: unconditional_elementwise_flow_moons/mcp/weights
      parameter_kwargs:
        hidden_units:
        - 8
        - 8
        activation: relu
        batch_norm: false
        dropout: 0
        # kernel_initializer: ones
        # kernel_regularizer: l2
        # activity_regularizer: l1_l2
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: *elementwise_flow_moons_order
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1
    circles:
      distribution_kwargs:
        <<: *distribution_kwargs
        num_layers: 1
        order: 80
        low: 0
        high: 1
      freeze_base_model: true
      base_checkpoint_path: unconditional_elementwise_flow_circles/mcp/weights
      parameter_kwargs:
        hidden_units:
        - 8
        - 8
        - 8
        activation: relu
        batch_norm: false
        dropout: 0
      base_distribution: elementwise_flow
      base_distribution_kwargs:
        <<: *distribution_kwargs
        order: *elementwise_flow_circles_order
      base_parameter_kwargs:
        conditional: false
        dtype: float32
      fit_kwargs:
        <<: *fit_kwargs
        validation_split: 0.1

malnutrition_distributions:
  elementwise_flow:
    distribution_kwargs:
      <<: *distribution_kwargs
      ^^order: 25
    parameter_kwargs:
      conditional: true
      activation: relu
      batch_norm: true
      dropout: 0
      hidden_units:
      - 16
      - 16
      input_shape: 1
    fit_kwargs:
      <<: *fit_kwargs
      batch_size: 512
      learning_rate: 0.01
      lr_patience: 50
      lr_reduction_factor: 0.1

  multivariate_flow:
    distribution_kwargs:
      <<: *distribution_kwargs
      order: 25
    parameter_kwargs:
      conditional: true
      activation: relu
      batch_norm: true
      dropout: 0
      hidden_units:
      - 16
      - 16
      input_shape: 1
    fit_kwargs:
      <<: *fit_kwargs
      batch_size: 512
      learning_rate: 0.01
      lr_patience: 50
      lr_reduction_factor: 0.1

  multivariate_normal:
    distribution_kwargs: {}
    parameter_kwargs:
      conditional: true
      activation: relu
      batch_norm: true
      dropout: 0
      hidden_units:
      - 16
      - 16
      input_shape: 1
    fit_kwargs:
      <<: *fit_kwargs
      batch_size: 512
      learning_rate: 0.01
      lr_patience: 50
      lr_reduction_factor: 0.1

  masked_autoregressive_flow:
    distribution_kwargs:
      <<: *distribution_kwargs
      order: 25
    parameter_kwargs:
      hidden_units:
      - 16
      - 16
      activation: relu
      conditional: True,
      # conditional_input_layers='first_layer',
      conditional_event_shape: 1
    fit_kwargs:
      <<: *fit_kwargs
      validation_split: 0.1
      batch_size: 512
      learning_rate: 0.001
      lr_patience: 50
      lr_reduction_factor: 0.1
